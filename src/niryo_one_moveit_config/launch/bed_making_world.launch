<?xml version="1.0"?>
<launch>

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />
  <!-- Allow user to specify database location -->
  <arg name="db_path" default="$(find niryo_one_moveit_config)/default_warehouse_mongo_db" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!--
  By default, hide joint_state_publisher's GUI

  MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
  The latter one maintains and publishes the current joint configuration of the simulated robot.
  It also provides a GUI to move the simulated robot around "manually".
  This corresponds to moving around the real robot without the use of MoveIt.
  -->
  <arg name="use_gui" default="false" />

  <!-- Gazebo specific options -->
  <arg name="gazebo_gui" default="true"/>
  <arg name="paused" default="false"/>
  <!-- By default, use the urdf location provided from the package -->
  <arg name="urdf_path" default="$(find niryo_one_description)/urdf/niryo_one.urdf.xacro"/>



  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find niryo_one_gazebo)/worlds/bed_making.world"/>
    <!-- more default parameters can be changed here -->
    <!-- Turn on comment below to turn off Gazebo GUI (ie we won't see Gazebo window) -->
    <!-- <arg name="gui" value="false"/> -->
  </include>

  <!-- <?ignore -->
  <!-- URDF -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find niryo_one_description)/urdf/niryo_one.urdf.xacro" />

  <!-- Load gazebo controller configurations -->
  <rosparam file="$(find niryo_one_gazebo)/config/niryo_one_gazebo_controllers.yaml" command="load" />

  <!-- Robot Pose -->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0.0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>




  <!-- Gazebo model - add a delay to let the controller start properly -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model niryo_one 
			-x $(arg x) -y $(arg y) -z $(arg z)
      -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" respawn="false" output="screen"/>
  <!-- ?> -->

  <!-- launch the controllers -->
  <include file="$(find niryo_one_gazebo)/launch/niryo_one_control.launch">
  </include>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find niryo_one_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->


  <!-- We do not have a robot connected, so publish fake joint states 
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="$(arg use_gui)"/>
    <rosparam param="source_list">[/joint_states]</rosparam>
  </node>-->

  <!-- Given the published joint states, publish tf for the robot links 
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />-->

  <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find niryo_one_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <!-- Unccoment the inclue below to show rviz -->
  <include file="$(find niryo_one_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- If database loading was enabled, start mongodb as well -->
  <include file="$(find niryo_one_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>